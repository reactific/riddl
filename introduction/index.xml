<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction on RIDDL Documentation</title><link>https://riddl.tech/introduction/</link><description>Recent content in Introduction on RIDDL Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>reid@reactific.com (Reid Spencer)</managingEditor><webMaster>reid@reactific.com (Reid Spencer)</webMaster><lastBuildDate>Wed, 01 Dec 2021 15:34:22 -0500</lastBuildDate><atom:link href="https://riddl.tech/introduction/index.xml" rel="self" type="application/rss+xml"/><item><title>Documentation Conventions</title><link>https://riddl.tech/introduction/conventions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>reid@reactific.com (Reid Spencer)</author><guid>https://riddl.tech/introduction/conventions/</guid><description>This page defines the conventions we use throughout this documentation.
RIDDL Snippets Whenever we include RIDDL code in the documentation it will be in a fixed sized font like this:
domain MyDomain is { ??? } Extended Backus-Naur Form When RIDDL grammar definitions are made, we utilize the EBNF grammar meta-language to specify the grammar. You can read about this grammar meta-language on Wikipedia For example, here&amp;rsquo;s how EBNF can define a quoted string:</description></item><item><title>Compilation</title><link>https://riddl.tech/introduction/compilation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>reid@reactific.com (Reid Spencer)</author><guid>https://riddl.tech/introduction/compilation/</guid><description>Introduction The Riddl compiler performs several functions which are described in this section. There are several phases, as described in the following sections.
Lexical Analysis Riddl uses the excellent fastparse library by Li Haoyi. This phase parses the raw textual input to make sure it is syntactically correct. From that syntax, an abstract syntax tree (AST) is produced. Incorrect syntax leads to errors without further analysis.</description></item><item><title>Principles</title><link>https://riddl.tech/introduction/principles/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>reid@reactific.com (Reid Spencer)</author><guid>https://riddl.tech/introduction/principles/</guid><description>RIDDL is a high level system specification language and as such must obey some principles of such languages. This page provides those principles.
1: Declarative RIDDL is not an implementation language and does not pretend to be computationally complete. RIDDL adopts this what not how principle. Details are for software developers. The analyst or architect that writes RIDDL documents wants to only specify what the system is while abstracting away the process of constructing it.</description></item></channel></rss>