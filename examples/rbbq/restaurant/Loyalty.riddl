// #Loyalty
context Loyalty is {
  adaptor FromPayment for context Restaurant.Payment is {
    adapt name is {
      from event Restaurant.Payment.Paid to command AccruePoints as {
        example CustomerPaysBill is {
          when "event Paid from Payment context occurs"
          and "customer is known in the Paid event"
          and "customer has a loyalty account"
          then "send AccruePoints command to Loyalty entity"
        }
      }
    }
  } described as "Adapts loyalty rewards from payments"
  type AccruePoints is command {
    when is TimeStamp,
    loyaltyAccountId is LoyaltyId,
    pointsAccrued is Number,
    fromOrder is OrderId?
  } explained as {
    |A command that, when received by the Loyalty account, accrues the `pointsAccrued`
    |number of points to the `loyaltyAccount` provided. Optionally, the order that
    |generated this
    |that can be redeemed in the future.
  }
  type PointsAccrued is event {
    when is TimeStamp,
    who is LoyaltyId,
    pointsAccrued is Number
  } explained as {
    |An event that is issued whenever points are accrued.
    |The event indicates `when` the accrual occurred, the loyalty account it
    |accrued to, and the number of `pointsAccrued`.
  }

  type RedeemPoints is command {
    ???
  } explained as "This needs some work"

  type PointsRedeemed is event {
    when is TimeStamp,
    who is CustomerId,
    pointsAwarded is Number,
    toOrder is OrderId
  } explained as {
  |This event occurs when the customer redeems their accrued points.
  }
  type LoyaltyEvent is one of { PointsAccrued or PointsRedeemed } explained as {
    |This is a type alternation of the events for the LoyaltyAccount entity
  }

  entity LoyaltyAccount is {
    state InitialState is {
      id is LoyaltyId
    } explained as {
    |This state type contains the state values associated with the loyalty
    |account when it is first created. It only contains the `LoyaltyId` value
    |that uniquely identifies the account.
    }
    state ActiveState is {
      id is LoyaltyId,
      customer is CustomerId,
      points is Number,
      accrualRate is Real,
      redemptionRate is Real
    } explained as {
    |This state type used when a loyalty account is active
    }
    handler Inputs is {
      ???
    }
  }
} explained as {
| This Loyalty bounded context keeps track of reward points for customer
| loyalty. Each customer is assigned a loyalty number and we track their
| points and usage. Loyalty points are redeemable for meals and other
| purchases at restaurants but not redeemable in cash.
}
// #Loyalty
